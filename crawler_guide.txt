【模組 requests】
通常需先安裝 #pip install requests，
並使用import requests 導入
用於請求網站的模組

【模組 Beautifulsoup】
通常需先安裝 #pip install beautifulsoup4，
並使用from bs4 import BeautifulSoup 導入
可用於分析網頁的原始碼


【爬蟲流程】
決定從網頁中爬取的資料 → 分析網頁原始碼 → 撰寫爬蟲 →　儲存成結構化資料

【基本代碼】
requests.get(url, headers) : 用於抓取網頁資料
response.status_code : 請求的狀態，正確狀態可由F12「網路」中的「Gerneral」確認，錯誤通常為404

【headers】
在HTTP的協定中，發出請求時，通常會夾帶一個 header，其中header 是一個字典，
header會包含有關請求的各種資訊，如瀏覽器類型、Cookie、Accept，
而header所需的項目可從F12檢視頁面中的「網路」，查看每項資料的要求方法(Request Method)
可以通過設置header來模擬瀏覽器行為，避免被網站封鎖或限制。
-常見headers
    1.cookie: 紀錄使用者的動作，如已勾選「接受18+」
    2.User-Agent: 記錄使用者的系統版本、瀏覽器版本等等，常用於基本的反爬蟲
-使用方法
    C_chat版有18+限制，其中該限制是由Cookie所記錄，
    我們需通過設置Cookie讓我們能順利抓取C_chat版的內容。
    1. my_headers = {'cookie': 'over18=l'}
    2. requests.get(url, headers = my_headers)

【User-Agent】
網頁架設方通常為了避免被爬蟲，會有一些反爬蟲手段，如檢查User-Agent、放驗證碼等
其中，User-Agent是一些請求方的資訊，如windows版本、瀏覽器版本等，
在headers加入User-Agent可模擬一般用戶向網頁發出請求，避免被基本的反爬蟲受手段擋住

【json檔案】
json檔案是一種輕量級的資料交換格式，常用於將結構化的資料在不同平台、程式語言中傳輸和儲存
主要由鍵值對(key-value pairs)組成，並使用大括號'{}'包圍，鍵值對之間用逗號','分隔。
廣泛應用於API前後端資料交換、跨平台通信、網路傳輸。
-json的好處
    1.易於理解和使用: 簡潔的文本格式表示結構化的資料，容易閱讀、理解、編寫且不需特殊工具
    2.跨平台、語言的支援: json支援多種程式語言和平台，使用json來傳輸資料無須擔心相容性問題
    3.輕量級和高效: json的表示方式簡潔而高校，使其在網路傳輸、儲存時佔用資源較少


